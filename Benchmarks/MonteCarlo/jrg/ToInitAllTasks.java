/**
  * Class for defining the initialisation data for all tasks.
  *
  * @author H W Yau
  * @version $Revision: 1.10 $ $Date: 1999/02/16 18:52:53 $
  */
public class ToInitAllTasks  implements java.io.Serializable {
  private final String header;
  private final String name;
  private final int startDate;
  private final int endDate;
  private final double dTime;
  private final int returnDefinition;
  private final double expectedReturnRate;
  private final double volatility;
  private final int nTimeSteps;
  private final double pathStartValue;

  /**
    * Constructor, for initialisation data which are common to all
    * computation tasks.
    *
    * @param header Simple header string.
    * @param name The name of the security which this Monte Carlo path
    *             should represent.
    * @param startDate The date when the path starts, in 'YYYYMMDD' format.
    * @param endDate The date when the path ends, in 'YYYYMMDD' format.
    * @param dTime The interval in the data between successive data points
    *              in the generated path.
    * @param returnDefinition How the statistic variables were defined,
    *                         according to the definitions in
    *                         <code>ReturnPath</code>'s two class variables
    *                         <code>COMPOUNDED</code> and
    *                         <code>NONCOMPOUNDED</code>.
    * @param expectedReturnRate The measured expected return rate for which
    *       to generate.
    * @param volatility The measured volatility for which to generate.
    * @param nTimeSteps The number of time steps for which to generate.
    * @param pathStartValue The stock price value to use at the start of each
    *        Monte Carlo simulation path.
    */
  public ToInitAllTasks(String header, String name, int startDate, int endDate, 
  double dTime, int returnDefinition, double expectedReturnRate, double volatility, 
  double pathStartValue) 
      pure
  {
    this.header             = header;
    this.name               = name;
    this.startDate          = startDate;
    this.endDate            = endDate;
    this.dTime              = dTime;
    this.returnDefinition   = returnDefinition;
    this.expectedReturnRate = expectedReturnRate;
    this.volatility         = volatility;
    this.nTimeSteps         = 0; // Bug in original code???
    this.pathStartValue     = pathStartValue;
  }
  /**
    * Another constructor, slightly easier to use by having slightly
    * fewer arguments.  Makes use of the "ReturnPath" object to
    * accomplish this.
    *
    * @param obj Object used to define the instance variables which
    *            should be carried over to this object.
    * @param nTimeSteps The number of time steps which the Monte
    *                   Carlo generator should make.
    * @param pathStartValue The stock price value to use at the start of each
    *        Monte Carlo simulation path.
    * @exception DemoException thrown if there is a problem accessing the
    *                          instance variables from the target objetct.
    */
  public ToInitAllTasks(ReturnPath obj, int nTimeSteps, double pathStartValue)  
  //pure
      throws DemoException 
    {
      this.header = null;
    //
    // Instance variables defined in the PathId object.
    this.name      = obj.get_name();
    this.startDate = obj.get_startDate();
    this.endDate   = obj.get_endDate();
    this.dTime     = obj.get_dTime();
    //
    // Instance variables defined in ReturnPath object.
    this.returnDefinition   = obj.get_returnDefinition();
    this.expectedReturnRate = obj.get_expectedReturnRate();
    this.volatility         = obj.get_volatility();
    this.nTimeSteps         = nTimeSteps;
    this.pathStartValue     = pathStartValue;
  }
  //------------------------------------------------------------------------
  // Accessor methods for class ToInitAllTasks.
  // Generated by 'makeJavaAccessor.pl' script.  HWY.  20th January 1999.
  //------------------------------------------------------------------------
  /**
    * Accessor method for private instance variable <code>header</code>.
    *
    * @return Value of instance variable <code>header</code>.
    */
  public String get_header() 
      pure
    {
    return(this.header);
  }
  /**
    * Accessor method for private instance variable <code>name</code>.
    *
    * @return Value of instance variable <code>name</code>.
    */
    public String get_name() 
	pure
    {
    return(this.name);
  }
  /**
    * Accessor method for private instance variable <code>startDate</code>.
    *
    * @return Value of instance variable <code>startDate</code>.
    */
  public int get_startDate() 
      pure
    {
    return(this.startDate);
  }
  /**
    * Accessor method for private instance variable <code>endDate</code>.
    *
    * @return Value of instance variable <code>endDate</code>.
    */
  public int get_endDate() 
      pure
    {
    return(this.endDate);
  }
  /**
    * Accessor method for private instance variable <code>dTime</code>.
    *
    * @return Value of instance variable <code>dTime</code>.
    */
  public double get_dTime() 
      pure
    {
    return(this.dTime);
  }
  /**
    * Accessor method for private instance variable <code>returnDefinition</code>.
    *
    * @return Value of instance variable <code>returnDefinition</code>.
    */
  public int get_returnDefinition() 
      pure
    {
    return(this.returnDefinition);
  }
  /**
    * Accessor method for private instance variable <code>expectedReturnRate</code>.
    *
    * @return Value of instance variable <code>expectedReturnRate</code>.
    */
  public double get_expectedReturnRate() 
      pure
    {
    return(this.expectedReturnRate);
  }
  /**
    * Accessor method for private instance variable <code>volatility</code>.
    *
    * @return Value of instance variable <code>volatility</code>.
    */
  public double get_volatility() 
    pure
  {
    return(this.volatility);
  }
  /**
    * Accessor method for private instance variable <code>nTimeSteps</code>.
    *
    * @return Value of instance variable <code>nTimeSteps</code>.
    */
  public int get_nTimeSteps() 
    pure
  {
    return(this.nTimeSteps);
  }
  /**
    * Accessor method for private instance variable <code>pathStartValue</code>.
    *
    * @return Value of instance variable <code>pathStartValue</code>.
    */
  public double get_pathStartValue() 
    pure
  {
    return(this.pathStartValue);
  }
  //------------------------------------------------------------------------
}
